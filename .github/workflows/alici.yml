# deploy.yml
name: deploy blog to dockerhub
on:
  push:
    branches:
      - hexo
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 切换分支
      - name: Checkout # 将仓库内master分支的内容下载到工作目录
        uses: actions/checkout@v2 # 脚本来自 https://github.com/actions/checkout
      # 发布
      - name: Login to Aliyun Container Registry (ACR)
        uses: aliyun/acr-login@v1 # 使用阿里云镜像服务action
        with:
          login-server: registry.cn-shenzhen.aliyuncs.com # 务必正确填写镜像容器服务的登录地址
          region-id: cn-shenzhen # 务必正确填写镜像容器服务的登录地址
          username: "${{ secrets.REGISTRY_USERNAME }}" # 引用GitHub repo设置的镜像容器服务用户名
          password: "${{ secrets.REGISTRY_PASSWORD }}" # 引用GitHub repo设置的镜像容器服务密码
      - name: Build and Push Docker Image
        env:
          IMAGE_TAG: ${{ github.sha }} # 用于标记容器版本号
        run: |
          docker build -t registry.cn-shenzhen.aliyuncs.com/maya1900/my-site:latest .
          docker push registry.cn-shenzhen.aliyuncs.com/maya1900/my-site:latest
      # 部署
      - name: Login aliEcs
        uses: appleboy/ssh-action@master
        env:
          IMAGE_TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          port: 22
          script: |-
            app_name="my-blog"
            app_url= "registry.cn-shenzhen.aliyuncs.com/maya1900/my-site"
            if test -n "$(docker ps -a |grep $app_name)"; then
              echo "停止并且删除容器和上版本镜像"
              docker stop $app_name
              docker rm $app_name
              docker rmi $app_url/$app_name:latest
            else
              echo "未检查到$app_name容器运行"
            fi
            
            echo "获取最新的镜像"
            docker pull registry.cn-shenzhen.aliyuncs.com/maya1900/my-site:latest
            echo "启动服务"
            docker run -p 8082:80 --name $app_name $app_url/$app_name:latest

